'' ------------------------------------------------------------------------------
''  <auto-generated>
''    Generated by Xsd2Code. Version 3.4.0.38967
''    <NameSpace>Ipsi.Tools.Common</NameSpace><Collection>List</Collection><codeType>VisualBasic</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net35</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
''  </auto-generated>
'' ------------------------------------------------------------------------------
Imports System
Imports System.Diagnostics
Imports System.Xml.Serialization
Imports System.Collections
Imports System.Xml.Schema
Imports System.ComponentModel
Imports System.IO
Imports System.Text
Imports System.Collections.Generic

Namespace Ipsi.Tools.Common
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://tempuri.org/Configuration.xsd"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://tempuri.org/Configuration.xsd", IsNullable:=false)>  _
    Partial Public Class Configurations
        
        Private configurationField As List(Of ConfigurationsConfiguration)
        
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        
        Public Sub New()
            MyBase.New
            Me.configurationField = New List(Of ConfigurationsConfiguration)()
        End Sub
        
        <System.Xml.Serialization.XmlElementAttribute("Configuration", Order:=0)>  _
        Public Property Configuration() As List(Of ConfigurationsConfiguration)
            Get
                Return Me.configurationField
            End Get
            Set
                Me.configurationField = value
            End Set
        End Property
        
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(Configurations))
                End If
                Return sSerializer
            End Get
        End Property
        
        #Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current Configurations object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try 
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose
                End If
            End Try
        End Function
        
        '''<summary>
        '''Deserializes workflow markup into an Configurations object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output Configurations object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As Configurations, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, Configurations)
            Try 
                obj = Deserialize(xml)
                Return true
            Catch ex As System.Exception
                exception = ex
                Return false
            End Try
        End Function
        
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As Configurations) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function
        
        Public Overloads Shared Function Deserialize(ByVal xml As String) As Configurations
            Dim stringReader As System.IO.StringReader = Nothing
            Try 
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)),Configurations)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose
                End If
            End Try
        End Function
        
        '''<summary>
        '''Serializes current Configurations object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overloads Overridable Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try 
                SaveToFile(fileName)
                Return true
            Catch e As System.Exception
                exception = e
                Return false
            End Try
        End Function
        
        Public Overloads Overridable Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try 
                Dim xmlString As String = Serialize
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose
                End If
            End Try
        End Sub
        
        '''<summary>
        '''Deserializes xml markup from file into an Configurations object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output Configurations object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As Configurations, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, Configurations)
            Try 
                obj = LoadFromFile(fileName)
                Return true
            Catch ex As System.Exception
                exception = ex
                Return false
            End Try
        End Function
        
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As Configurations) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function
        
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As Configurations
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try 
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close
                file.Close
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose
                End If
            End Try
        End Function
        #End Region
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://tempuri.org/Configuration.xsd")>  _
    Partial Public Class ConfigurationsConfiguration
        
        Private nameField As String
        
        Private codeField As String
        
        Private servicesField As List(Of ConfigurationsConfigurationService)
        
        Private distributionsField As List(Of ConfigurationsConfigurationDistribution)
        
        Private databasesField As List(Of ConfigurationsConfigurationDatabase)
        
        Private assemblyField As String
        
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        
        Public Sub New()
            MyBase.New
            Me.databasesField = New List(Of ConfigurationsConfigurationDatabase)()
            Me.distributionsField = New List(Of ConfigurationsConfigurationDistribution)()
            Me.servicesField = New List(Of ConfigurationsConfigurationService)()
        End Sub
        
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        <System.Xml.Serialization.XmlArrayAttribute(Order:=2),  _
         System.Xml.Serialization.XmlArrayItemAttribute("Service", IsNullable:=false)>  _
        Public Property Services() As List(Of ConfigurationsConfigurationService)
            Get
                Return Me.servicesField
            End Get
            Set
                Me.servicesField = value
            End Set
        End Property
        
        <System.Xml.Serialization.XmlArrayAttribute(Order:=3),  _
         System.Xml.Serialization.XmlArrayItemAttribute("Distribution", IsNullable:=false)>  _
        Public Property Distributions() As List(Of ConfigurationsConfigurationDistribution)
            Get
                Return Me.distributionsField
            End Get
            Set
                Me.distributionsField = value
            End Set
        End Property
        
        <System.Xml.Serialization.XmlArrayAttribute(Order:=4),  _
         System.Xml.Serialization.XmlArrayItemAttribute("Database", IsNullable:=false)>  _
        Public Property Databases() As List(Of ConfigurationsConfigurationDatabase)
            Get
                Return Me.databasesField
            End Get
            Set
                Me.databasesField = value
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=5)>  _
        Public Property [Assembly]() As String
            Get
                Return Me.assemblyField
            End Get
            Set
                Me.assemblyField = value
            End Set
        End Property
        
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(ConfigurationsConfiguration))
                End If
                Return sSerializer
            End Get
        End Property
        
        #Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current ConfigurationsConfiguration object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try 
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose
                End If
            End Try
        End Function
        
        '''<summary>
        '''Deserializes workflow markup into an ConfigurationsConfiguration object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output ConfigurationsConfiguration object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As ConfigurationsConfiguration, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, ConfigurationsConfiguration)
            Try 
                obj = Deserialize(xml)
                Return true
            Catch ex As System.Exception
                exception = ex
                Return false
            End Try
        End Function
        
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As ConfigurationsConfiguration) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function
        
        Public Overloads Shared Function Deserialize(ByVal xml As String) As ConfigurationsConfiguration
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), ConfigurationsConfiguration)
            Catch ex As System.Exception

            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose
                End If
            End Try
        End Function
        
        '''<summary>
        '''Serializes current ConfigurationsConfiguration object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overloads Overridable Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try 
                SaveToFile(fileName)
                Return true
            Catch e As System.Exception
                exception = e
                Return false
            End Try
        End Function
        
        Public Overloads Overridable Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try 
                Dim xmlString As String = Serialize
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose
                End If
            End Try
        End Sub
        
        '''<summary>
        '''Deserializes xml markup from file into an ConfigurationsConfiguration object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output ConfigurationsConfiguration object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As ConfigurationsConfiguration, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, ConfigurationsConfiguration)
            Try 
                obj = LoadFromFile(fileName)
                Return true
            Catch ex As System.Exception
                exception = ex
                Return false
            End Try
        End Function
        
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As ConfigurationsConfiguration) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function
        
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As ConfigurationsConfiguration
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try 
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close
                file.Close
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose
                End If
            End Try
        End Function
        #End Region
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://tempuri.org/Configuration.xsd")>  _
    Partial Public Class ConfigurationsConfigurationService
        
        Private nameField As String
        
        Private classField As String
        
        Private interfaceField As String
        
        Private endpointField As String
        
        Private customBehaviorField As String
        
        Private secureField As System.Nullable(Of Boolean)
        
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property [Class]() As String
            Get
                Return Me.classField
            End Get
            Set
                Me.classField = value
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property [Interface]() As String
            Get
                Return Me.interfaceField
            End Get
            Set
                Me.interfaceField = value
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property Endpoint() As String
            Get
                Return Me.endpointField
            End Get
            Set
                Me.endpointField = value
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=4)>  _
        Public Property CustomBehavior() As String
            Get
                Return Me.customBehaviorField
            End Get
            Set
                Me.customBehaviorField = value
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Order:=5)>  _
        Public Property Secure() As System.Nullable(Of Boolean)
            Get
                Return Me.secureField
            End Get
            Set
                Me.secureField = value
            End Set
        End Property
        
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(ConfigurationsConfigurationService))
                End If
                Return sSerializer
            End Get
        End Property
        
        #Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current ConfigurationsConfigurationService object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try 
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose
                End If
            End Try
        End Function
        
        '''<summary>
        '''Deserializes workflow markup into an ConfigurationsConfigurationService object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output ConfigurationsConfigurationService object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As ConfigurationsConfigurationService, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, ConfigurationsConfigurationService)
            Try 
                obj = Deserialize(xml)
                Return true
            Catch ex As System.Exception
                exception = ex
                Return false
            End Try
        End Function
        
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As ConfigurationsConfigurationService) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function
        
        Public Overloads Shared Function Deserialize(ByVal xml As String) As ConfigurationsConfigurationService
            Dim stringReader As System.IO.StringReader = Nothing
            Try 
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)),ConfigurationsConfigurationService)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose
                End If
            End Try
        End Function
        
        '''<summary>
        '''Serializes current ConfigurationsConfigurationService object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overloads Overridable Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try 
                SaveToFile(fileName)
                Return true
            Catch e As System.Exception
                exception = e
                Return false
            End Try
        End Function
        
        Public Overloads Overridable Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try 
                Dim xmlString As String = Serialize
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose
                End If
            End Try
        End Sub
        
        '''<summary>
        '''Deserializes xml markup from file into an ConfigurationsConfigurationService object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output ConfigurationsConfigurationService object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As ConfigurationsConfigurationService, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, ConfigurationsConfigurationService)
            Try 
                obj = LoadFromFile(fileName)
                Return true
            Catch ex As System.Exception
                exception = ex
                Return false
            End Try
        End Function
        
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As ConfigurationsConfigurationService) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function
        
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As ConfigurationsConfigurationService
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try 
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close
                file.Close
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose
                End If
            End Try
        End Function
        #End Region
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://tempuri.org/Configuration.xsd")>  _
    Partial Public Class ConfigurationsConfigurationDistribution
        
        Private idField As String
        
        Private descriptionField As String
        
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(ConfigurationsConfigurationDistribution))
                End If
                Return sSerializer
            End Get
        End Property
        
        #Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current ConfigurationsConfigurationDistribution object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try 
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose
                End If
            End Try
        End Function
        
        '''<summary>
        '''Deserializes workflow markup into an ConfigurationsConfigurationDistribution object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output ConfigurationsConfigurationDistribution object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As ConfigurationsConfigurationDistribution, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, ConfigurationsConfigurationDistribution)
            Try 
                obj = Deserialize(xml)
                Return true
            Catch ex As System.Exception
                exception = ex
                Return false
            End Try
        End Function
        
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As ConfigurationsConfigurationDistribution) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function
        
        Public Overloads Shared Function Deserialize(ByVal xml As String) As ConfigurationsConfigurationDistribution
            Dim stringReader As System.IO.StringReader = Nothing
            Try 
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)),ConfigurationsConfigurationDistribution)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose
                End If
            End Try
        End Function
        
        '''<summary>
        '''Serializes current ConfigurationsConfigurationDistribution object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overloads Overridable Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try 
                SaveToFile(fileName)
                Return true
            Catch e As System.Exception
                exception = e
                Return false
            End Try
        End Function
        
        Public Overloads Overridable Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try 
                Dim xmlString As String = Serialize
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose
                End If
            End Try
        End Sub
        
        '''<summary>
        '''Deserializes xml markup from file into an ConfigurationsConfigurationDistribution object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output ConfigurationsConfigurationDistribution object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As ConfigurationsConfigurationDistribution, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, ConfigurationsConfigurationDistribution)
            Try 
                obj = LoadFromFile(fileName)
                Return true
            Catch ex As System.Exception
                exception = ex
                Return false
            End Try
        End Function
        
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As ConfigurationsConfigurationDistribution) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function
        
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As ConfigurationsConfigurationDistribution
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try 
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close
                file.Close
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose
                End If
            End Try
        End Function
        #End Region
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://tempuri.org/Configuration.xsd")>  _
    Partial Public Class ConfigurationsConfigurationDatabase
        
        Private idField As String
        
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(ConfigurationsConfigurationDatabase))
                End If
                Return sSerializer
            End Get
        End Property
        
        #Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current ConfigurationsConfigurationDatabase object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try 
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose
                End If
            End Try
        End Function
        
        '''<summary>
        '''Deserializes workflow markup into an ConfigurationsConfigurationDatabase object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output ConfigurationsConfigurationDatabase object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As ConfigurationsConfigurationDatabase, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, ConfigurationsConfigurationDatabase)
            Try 
                obj = Deserialize(xml)
                Return true
            Catch ex As System.Exception
                exception = ex
                Return false
            End Try
        End Function
        
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As ConfigurationsConfigurationDatabase) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function
        
        Public Overloads Shared Function Deserialize(ByVal xml As String) As ConfigurationsConfigurationDatabase
            Dim stringReader As System.IO.StringReader = Nothing
            Try 
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)),ConfigurationsConfigurationDatabase)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose
                End If
            End Try
        End Function
        
        '''<summary>
        '''Serializes current ConfigurationsConfigurationDatabase object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overloads Overridable Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try 
                SaveToFile(fileName)
                Return true
            Catch e As System.Exception
                exception = e
                Return false
            End Try
        End Function
        
        Public Overloads Overridable Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try 
                Dim xmlString As String = Serialize
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose
                End If
            End Try
        End Sub
        
        '''<summary>
        '''Deserializes xml markup from file into an ConfigurationsConfigurationDatabase object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output ConfigurationsConfigurationDatabase object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As ConfigurationsConfigurationDatabase, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, ConfigurationsConfigurationDatabase)
            Try 
                obj = LoadFromFile(fileName)
                Return true
            Catch ex As System.Exception
                exception = ex
                Return false
            End Try
        End Function
        
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As ConfigurationsConfigurationDatabase) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function
        
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As ConfigurationsConfigurationDatabase
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try 
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close
                file.Close
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose
                End If
            End Try
        End Function
        #End Region
    End Class
End Namespace
