'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace EventLoggerService
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ErrorLogBase", [Namespace]:="http://schemas.datacontract.org/2004/07/Ipsi.Common.Databases.Utilities.Types"),  _
     System.SerializableAttribute(),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(EventLoggerService.ErrorLogEntry)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(EventLoggerService.ErrorLogDetailEntry))>  _
    Partial Public Class ErrorLogBase
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IdField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Id() As String
            Get
                Return Me.IdField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IdField, value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ErrorLogEntry", [Namespace]:="http://schemas.datacontract.org/2004/07/Ipsi.Common.Databases.Utilities.Types"),  _
     System.SerializableAttribute(),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(EventLoggerService.ErrorLogDetailEntry))>  _
    Partial Public Class ErrorLogEntry
        Inherits EventLoggerService.ErrorLogBase
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ApplicationNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HostNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LogDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MessageField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SourceField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusCodeField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TypeNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserField As String
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ApplicationName() As String
            Get
                Return Me.ApplicationNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ApplicationNameField, value) <> true) Then
                    Me.ApplicationNameField = value
                    Me.RaisePropertyChanged("ApplicationName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HostName() As String
            Get
                Return Me.HostNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.HostNameField, value) <> true) Then
                    Me.HostNameField = value
                    Me.RaisePropertyChanged("HostName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LogDate() As Date
            Get
                Return Me.LogDateField
            End Get
            Set
                If (Me.LogDateField.Equals(value) <> true) Then
                    Me.LogDateField = value
                    Me.RaisePropertyChanged("LogDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Message() As String
            Get
                Return Me.MessageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MessageField, value) <> true) Then
                    Me.MessageField = value
                    Me.RaisePropertyChanged("Message")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Source() As String
            Get
                Return Me.SourceField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SourceField, value) <> true) Then
                    Me.SourceField = value
                    Me.RaisePropertyChanged("Source")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StatusCode() As Integer
            Get
                Return Me.StatusCodeField
            End Get
            Set
                If (Me.StatusCodeField.Equals(value) <> true) Then
                    Me.StatusCodeField = value
                    Me.RaisePropertyChanged("StatusCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TypeName() As String
            Get
                Return Me.TypeNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TypeNameField, value) <> true) Then
                    Me.TypeNameField = value
                    Me.RaisePropertyChanged("TypeName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property User() As String
            Get
                Return Me.UserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserField, value) <> true) Then
                    Me.UserField = value
                    Me.RaisePropertyChanged("User")
                End If
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ErrorLogDetailEntry", [Namespace]:="http://schemas.datacontract.org/2004/07/Ipsi.Common.Databases.Utilities.Types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ErrorLogDetailEntry
        Inherits EventLoggerService.ErrorLogEntry
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private XmlField As String
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Xml() As String
            Get
                Return Me.XmlField
            End Get
            Set
                If (Object.ReferenceEquals(Me.XmlField, value) <> true) Then
                    Me.XmlField = value
                    Me.RaisePropertyChanged("Xml")
                End If
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ServiceCallBase", [Namespace]:="http://schemas.datacontract.org/2004/07/Ipsi.Common.Databases.Utilities.Types"),  _
     System.SerializableAttribute(),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(EventLoggerService.StartServiceCallLogEntry)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(EventLoggerService.EndServiceCallLogEntry)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(EventLoggerService.ServiceCallLogEntry))>  _
    Partial Public Class ServiceCallBase
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IdField As System.Guid
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Id() As System.Guid
            Get
                Return Me.IdField
            End Get
            Set
                If (Me.IdField.Equals(value) <> true) Then
                    Me.IdField = value
                    Me.RaisePropertyChanged("Id")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="StartServiceCallLogEntry", [Namespace]:="http://schemas.datacontract.org/2004/07/Ipsi.Common.Databases.Utilities.Types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class StartServiceCallLogEntry
        Inherits EventLoggerService.ServiceCallBase
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdditionalInformationField As EventLoggerService.AdditionalInformation
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CompanyField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DistributionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OperationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PolicyNumberField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RequestField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StartTimeField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private URLField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserField As String
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdditionalInformation() As EventLoggerService.AdditionalInformation
            Get
                Return Me.AdditionalInformationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdditionalInformationField, value) <> true) Then
                    Me.AdditionalInformationField = value
                    Me.RaisePropertyChanged("AdditionalInformation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Company() As String
            Get
                Return Me.CompanyField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CompanyField, value) <> true) Then
                    Me.CompanyField = value
                    Me.RaisePropertyChanged("Company")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Distribution() As String
            Get
                Return Me.DistributionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DistributionField, value) <> true) Then
                    Me.DistributionField = value
                    Me.RaisePropertyChanged("Distribution")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Operation() As String
            Get
                Return Me.OperationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OperationField, value) <> true) Then
                    Me.OperationField = value
                    Me.RaisePropertyChanged("Operation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PolicyNumber() As String
            Get
                Return Me.PolicyNumberField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PolicyNumberField, value) <> true) Then
                    Me.PolicyNumberField = value
                    Me.RaisePropertyChanged("PolicyNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Request() As String
            Get
                Return Me.RequestField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RequestField, value) <> true) Then
                    Me.RequestField = value
                    Me.RaisePropertyChanged("Request")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartTime() As Date
            Get
                Return Me.StartTimeField
            End Get
            Set
                If (Me.StartTimeField.Equals(value) <> true) Then
                    Me.StartTimeField = value
                    Me.RaisePropertyChanged("StartTime")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property URL() As String
            Get
                Return Me.URLField
            End Get
            Set
                If (Object.ReferenceEquals(Me.URLField, value) <> true) Then
                    Me.URLField = value
                    Me.RaisePropertyChanged("URL")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property User() As String
            Get
                Return Me.UserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserField, value) <> true) Then
                    Me.UserField = value
                    Me.RaisePropertyChanged("User")
                End If
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="EndServiceCallLogEntry", [Namespace]:="http://schemas.datacontract.org/2004/07/Ipsi.Common.Databases.Utilities.Types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class EndServiceCallLogEntry
        Inherits EventLoggerService.ServiceCallBase
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EndTimeField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ResponseField As String
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EndTime() As Date
            Get
                Return Me.EndTimeField
            End Get
            Set
                If (Me.EndTimeField.Equals(value) <> true) Then
                    Me.EndTimeField = value
                    Me.RaisePropertyChanged("EndTime")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Response() As String
            Get
                Return Me.ResponseField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ResponseField, value) <> true) Then
                    Me.ResponseField = value
                    Me.RaisePropertyChanged("Response")
                End If
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ServiceCallLogEntry", [Namespace]:="http://schemas.datacontract.org/2004/07/Ipsi.Common.Databases.Utilities.Types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ServiceCallLogEntry
        Inherits EventLoggerService.ServiceCallBase
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdditionalInformationField As EventLoggerService.AdditionalInformation
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CompanyField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DistributionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EndTimeField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OperationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PolicyNumberField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RequestField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ResponseField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StartTimeField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private URLField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserField As String
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdditionalInformation() As EventLoggerService.AdditionalInformation
            Get
                Return Me.AdditionalInformationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdditionalInformationField, value) <> true) Then
                    Me.AdditionalInformationField = value
                    Me.RaisePropertyChanged("AdditionalInformation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Company() As String
            Get
                Return Me.CompanyField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CompanyField, value) <> true) Then
                    Me.CompanyField = value
                    Me.RaisePropertyChanged("Company")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Distribution() As String
            Get
                Return Me.DistributionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DistributionField, value) <> true) Then
                    Me.DistributionField = value
                    Me.RaisePropertyChanged("Distribution")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EndTime() As Date
            Get
                Return Me.EndTimeField
            End Get
            Set
                If (Me.EndTimeField.Equals(value) <> true) Then
                    Me.EndTimeField = value
                    Me.RaisePropertyChanged("EndTime")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Operation() As String
            Get
                Return Me.OperationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OperationField, value) <> true) Then
                    Me.OperationField = value
                    Me.RaisePropertyChanged("Operation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PolicyNumber() As String
            Get
                Return Me.PolicyNumberField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PolicyNumberField, value) <> true) Then
                    Me.PolicyNumberField = value
                    Me.RaisePropertyChanged("PolicyNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Request() As String
            Get
                Return Me.RequestField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RequestField, value) <> true) Then
                    Me.RequestField = value
                    Me.RaisePropertyChanged("Request")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Response() As String
            Get
                Return Me.ResponseField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ResponseField, value) <> true) Then
                    Me.ResponseField = value
                    Me.RaisePropertyChanged("Response")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartTime() As Date
            Get
                Return Me.StartTimeField
            End Get
            Set
                If (Me.StartTimeField.Equals(value) <> true) Then
                    Me.StartTimeField = value
                    Me.RaisePropertyChanged("StartTime")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property URL() As String
            Get
                Return Me.URLField
            End Get
            Set
                If (Object.ReferenceEquals(Me.URLField, value) <> true) Then
                    Me.URLField = value
                    Me.RaisePropertyChanged("URL")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property User() As String
            Get
                Return Me.UserField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserField, value) <> true) Then
                    Me.UserField = value
                    Me.RaisePropertyChanged("User")
                End If
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AdditionalInformation", [Namespace]:="http://schemas.datacontract.org/2004/07/Ipsi.Common.Databases.Utilities.Types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AdditionalInformation
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemsField As System.Collections.Generic.List(Of EventLoggerService.AdditionalInformationItem)
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Items() As System.Collections.Generic.List(Of EventLoggerService.AdditionalInformationItem)
            Get
                Return Me.ItemsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemsField, value) <> true) Then
                    Me.ItemsField = value
                    Me.RaisePropertyChanged("Items")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AdditionalInformationItem", [Namespace]:="http://schemas.datacontract.org/2004/07/Ipsi.Common.Databases.Utilities.Types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AdditionalInformationItem
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private KeyField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ValueField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Key() As String
            Get
                Return Me.KeyField
            End Get
            Set
                If (Object.ReferenceEquals(Me.KeyField, value) <> true) Then
                    Me.KeyField = value
                    Me.RaisePropertyChanged("Key")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Value() As String
            Get
                Return Me.ValueField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ValueField, value) <> true) Then
                    Me.ValueField = value
                    Me.RaisePropertyChanged("Value")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="LogSearchCriteria", [Namespace]:="http://schemas.datacontract.org/2004/07/Ipsi.Common.Databases.Utilities.Types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class LogSearchCriteria
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ApplicationNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PageIndexField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PageSizeField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ApplicationName() As String
            Get
                Return Me.ApplicationNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ApplicationNameField, value) <> true) Then
                    Me.ApplicationNameField = value
                    Me.RaisePropertyChanged("ApplicationName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PageIndex() As Integer
            Get
                Return Me.PageIndexField
            End Get
            Set
                If (Me.PageIndexField.Equals(value) <> true) Then
                    Me.PageIndexField = value
                    Me.RaisePropertyChanged("PageIndex")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PageSize() As Integer
            Get
                Return Me.PageSizeField
            End Get
            Set
                If (Me.PageSizeField.Equals(value) <> true) Then
                    Me.PageSizeField = value
                    Me.RaisePropertyChanged("PageSize")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ErrorLogSummary", [Namespace]:="http://schemas.datacontract.org/2004/07/Ipsi.Common.Databases.Utilities.Types"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ErrorLogSummary
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CountField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ItemsField As System.Collections.Generic.List(Of EventLoggerService.ErrorLogEntry)
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Count() As Integer
            Get
                Return Me.CountField
            End Get
            Set
                If (Me.CountField.Equals(value) <> true) Then
                    Me.CountField = value
                    Me.RaisePropertyChanged("Count")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Items() As System.Collections.Generic.List(Of EventLoggerService.ErrorLogEntry)
            Get
                Return Me.ItemsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ItemsField, value) <> true) Then
                    Me.ItemsField = value
                    Me.RaisePropertyChanged("Items")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="EventLoggerService.IEventLogger")>  _
    Public Interface IEventLogger
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IEventLogger/LogError", ReplyAction:="http://tempuri.org/IEventLogger/LogErrorResponse")>  _
        Function LogError(ByVal entry As EventLoggerService.ErrorLogDetailEntry) As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IEventLogger/LogError", ReplyAction:="http://tempuri.org/IEventLogger/LogErrorResponse")>  _
        Function BeginLogError(ByVal entry As EventLoggerService.ErrorLogDetailEntry, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndLogError(ByVal result As System.IAsyncResult) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IEventLogger/LogServiceCall", ReplyAction:="http://tempuri.org/IEventLogger/LogServiceCallResponse")>  _
        Function LogServiceCall(ByVal request As EventLoggerService.ServiceCallLogEntry) As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IEventLogger/LogServiceCall", ReplyAction:="http://tempuri.org/IEventLogger/LogServiceCallResponse")>  _
        Function BeginLogServiceCall(ByVal request As EventLoggerService.ServiceCallLogEntry, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndLogServiceCall(ByVal result As System.IAsyncResult) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IEventLogger/LogStartServiceCall", ReplyAction:="http://tempuri.org/IEventLogger/LogStartServiceCallResponse")>  _
        Function LogStartServiceCall(ByVal startrequest As EventLoggerService.StartServiceCallLogEntry) As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IEventLogger/LogStartServiceCall", ReplyAction:="http://tempuri.org/IEventLogger/LogStartServiceCallResponse")>  _
        Function BeginLogStartServiceCall(ByVal startrequest As EventLoggerService.StartServiceCallLogEntry, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndLogStartServiceCall(ByVal result As System.IAsyncResult) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IEventLogger/LogEndServiceCall", ReplyAction:="http://tempuri.org/IEventLogger/LogEndServiceCallResponse")>  _
        Function LogEndServiceCall(ByVal endrequest As EventLoggerService.EndServiceCallLogEntry) As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IEventLogger/LogEndServiceCall", ReplyAction:="http://tempuri.org/IEventLogger/LogEndServiceCallResponse")>  _
        Function BeginLogEndServiceCall(ByVal endrequest As EventLoggerService.EndServiceCallLogEntry, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndLogEndServiceCall(ByVal result As System.IAsyncResult) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IEventLogger/GetServiceCalls", ReplyAction:="http://tempuri.org/IEventLogger/GetServiceCallsResponse")>  _
        Function GetServiceCalls(ByVal appName As String, ByVal pageIndex As Integer, ByVal pageSize As Integer) As System.Collections.Generic.List(Of EventLoggerService.ServiceCallLogEntry)
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IEventLogger/GetServiceCalls", ReplyAction:="http://tempuri.org/IEventLogger/GetServiceCallsResponse")>  _
        Function BeginGetServiceCalls(ByVal appName As String, ByVal pageIndex As Integer, ByVal pageSize As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndGetServiceCalls(ByVal result As System.IAsyncResult) As System.Collections.Generic.List(Of EventLoggerService.ServiceCallLogEntry)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IEventLogger/GetErrors", ReplyAction:="http://tempuri.org/IEventLogger/GetErrorsResponse")>  _
        Function GetErrors(ByVal criteria As EventLoggerService.LogSearchCriteria) As EventLoggerService.ErrorLogSummary
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IEventLogger/GetErrors", ReplyAction:="http://tempuri.org/IEventLogger/GetErrorsResponse")>  _
        Function BeginGetErrors(ByVal criteria As EventLoggerService.LogSearchCriteria, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndGetErrors(ByVal result As System.IAsyncResult) As EventLoggerService.ErrorLogSummary
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IEventLogger/GetError", ReplyAction:="http://tempuri.org/IEventLogger/GetErrorResponse")>  _
        Function GetError(ByVal appName As String, ByVal id As String) As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/IEventLogger/GetError", ReplyAction:="http://tempuri.org/IEventLogger/GetErrorResponse")>  _
        Function BeginGetError(ByVal appName As String, ByVal id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndGetError(ByVal result As System.IAsyncResult) As String
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IEventLoggerChannel
        Inherits EventLoggerService.IEventLogger, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class LogErrorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class LogServiceCallCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class LogStartServiceCallCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class LogEndServiceCallCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GetServiceCallsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As System.Collections.Generic.List(Of EventLoggerService.ServiceCallLogEntry)
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Collections.Generic.List(Of EventLoggerService.ServiceCallLogEntry))
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GetErrorsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As EventLoggerService.ErrorLogSummary
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EventLoggerService.ErrorLogSummary)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GetErrorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class EventLoggerClient
        Inherits System.ServiceModel.ClientBase(Of EventLoggerService.IEventLogger)
        Implements EventLoggerService.IEventLogger
        
        Private onBeginLogErrorDelegate As BeginOperationDelegate
        
        Private onEndLogErrorDelegate As EndOperationDelegate
        
        Private onLogErrorCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginLogServiceCallDelegate As BeginOperationDelegate
        
        Private onEndLogServiceCallDelegate As EndOperationDelegate
        
        Private onLogServiceCallCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginLogStartServiceCallDelegate As BeginOperationDelegate
        
        Private onEndLogStartServiceCallDelegate As EndOperationDelegate
        
        Private onLogStartServiceCallCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginLogEndServiceCallDelegate As BeginOperationDelegate
        
        Private onEndLogEndServiceCallDelegate As EndOperationDelegate
        
        Private onLogEndServiceCallCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginGetServiceCallsDelegate As BeginOperationDelegate
        
        Private onEndGetServiceCallsDelegate As EndOperationDelegate
        
        Private onGetServiceCallsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginGetErrorsDelegate As BeginOperationDelegate
        
        Private onEndGetErrorsDelegate As EndOperationDelegate
        
        Private onGetErrorsCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginGetErrorDelegate As BeginOperationDelegate
        
        Private onEndGetErrorDelegate As EndOperationDelegate
        
        Private onGetErrorCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Event LogErrorCompleted As System.EventHandler(Of LogErrorCompletedEventArgs)
        
        Public Event LogServiceCallCompleted As System.EventHandler(Of LogServiceCallCompletedEventArgs)
        
        Public Event LogStartServiceCallCompleted As System.EventHandler(Of LogStartServiceCallCompletedEventArgs)
        
        Public Event LogEndServiceCallCompleted As System.EventHandler(Of LogEndServiceCallCompletedEventArgs)
        
        Public Event GetServiceCallsCompleted As System.EventHandler(Of GetServiceCallsCompletedEventArgs)
        
        Public Event GetErrorsCompleted As System.EventHandler(Of GetErrorsCompletedEventArgs)
        
        Public Event GetErrorCompleted As System.EventHandler(Of GetErrorCompletedEventArgs)
        
        Public Function LogError(ByVal entry As EventLoggerService.ErrorLogDetailEntry) As String Implements EventLoggerService.IEventLogger.LogError
            Return MyBase.Channel.LogError(entry)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginLogError(ByVal entry As EventLoggerService.ErrorLogDetailEntry, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements EventLoggerService.IEventLogger.BeginLogError
            Return MyBase.Channel.BeginLogError(entry, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndLogError(ByVal result As System.IAsyncResult) As String Implements EventLoggerService.IEventLogger.EndLogError
            Return MyBase.Channel.EndLogError(result)
        End Function
        
        Private Function OnBeginLogError(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim entry As EventLoggerService.ErrorLogDetailEntry = CType(inValues(0),EventLoggerService.ErrorLogDetailEntry)
            Return Me.BeginLogError(entry, callback, asyncState)
        End Function
        
        Private Function OnEndLogError(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndLogError(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnLogErrorCompleted(ByVal state As Object)
            If (Not (Me.LogErrorCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent LogErrorCompleted(Me, New LogErrorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub LogErrorAsync(ByVal entry As EventLoggerService.ErrorLogDetailEntry)
            Me.LogErrorAsync(entry, Nothing)
        End Sub
        
        Public Overloads Sub LogErrorAsync(ByVal entry As EventLoggerService.ErrorLogDetailEntry, ByVal userState As Object)
            If (Me.onBeginLogErrorDelegate Is Nothing) Then
                Me.onBeginLogErrorDelegate = AddressOf Me.OnBeginLogError
            End If
            If (Me.onEndLogErrorDelegate Is Nothing) Then
                Me.onEndLogErrorDelegate = AddressOf Me.OnEndLogError
            End If
            If (Me.onLogErrorCompletedDelegate Is Nothing) Then
                Me.onLogErrorCompletedDelegate = AddressOf Me.OnLogErrorCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginLogErrorDelegate, New Object() {entry}, Me.onEndLogErrorDelegate, Me.onLogErrorCompletedDelegate, userState)
        End Sub
        
        Public Function LogServiceCall(ByVal request As EventLoggerService.ServiceCallLogEntry) As String Implements EventLoggerService.IEventLogger.LogServiceCall
            Return MyBase.Channel.LogServiceCall(request)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginLogServiceCall(ByVal request As EventLoggerService.ServiceCallLogEntry, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements EventLoggerService.IEventLogger.BeginLogServiceCall
            Return MyBase.Channel.BeginLogServiceCall(request, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndLogServiceCall(ByVal result As System.IAsyncResult) As String Implements EventLoggerService.IEventLogger.EndLogServiceCall
            Return MyBase.Channel.EndLogServiceCall(result)
        End Function
        
        Private Function OnBeginLogServiceCall(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim request As EventLoggerService.ServiceCallLogEntry = CType(inValues(0),EventLoggerService.ServiceCallLogEntry)
            Return Me.BeginLogServiceCall(request, callback, asyncState)
        End Function
        
        Private Function OnEndLogServiceCall(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndLogServiceCall(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnLogServiceCallCompleted(ByVal state As Object)
            If (Not (Me.LogServiceCallCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent LogServiceCallCompleted(Me, New LogServiceCallCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub LogServiceCallAsync(ByVal request As EventLoggerService.ServiceCallLogEntry)
            Me.LogServiceCallAsync(request, Nothing)
        End Sub
        
        Public Overloads Sub LogServiceCallAsync(ByVal request As EventLoggerService.ServiceCallLogEntry, ByVal userState As Object)
            If (Me.onBeginLogServiceCallDelegate Is Nothing) Then
                Me.onBeginLogServiceCallDelegate = AddressOf Me.OnBeginLogServiceCall
            End If
            If (Me.onEndLogServiceCallDelegate Is Nothing) Then
                Me.onEndLogServiceCallDelegate = AddressOf Me.OnEndLogServiceCall
            End If
            If (Me.onLogServiceCallCompletedDelegate Is Nothing) Then
                Me.onLogServiceCallCompletedDelegate = AddressOf Me.OnLogServiceCallCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginLogServiceCallDelegate, New Object() {request}, Me.onEndLogServiceCallDelegate, Me.onLogServiceCallCompletedDelegate, userState)
        End Sub
        
        Public Function LogStartServiceCall(ByVal startrequest As EventLoggerService.StartServiceCallLogEntry) As String Implements EventLoggerService.IEventLogger.LogStartServiceCall
            Return MyBase.Channel.LogStartServiceCall(startrequest)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginLogStartServiceCall(ByVal startrequest As EventLoggerService.StartServiceCallLogEntry, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements EventLoggerService.IEventLogger.BeginLogStartServiceCall
            Return MyBase.Channel.BeginLogStartServiceCall(startrequest, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndLogStartServiceCall(ByVal result As System.IAsyncResult) As String Implements EventLoggerService.IEventLogger.EndLogStartServiceCall
            Return MyBase.Channel.EndLogStartServiceCall(result)
        End Function
        
        Private Function OnBeginLogStartServiceCall(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim startrequest As EventLoggerService.StartServiceCallLogEntry = CType(inValues(0),EventLoggerService.StartServiceCallLogEntry)
            Return Me.BeginLogStartServiceCall(startrequest, callback, asyncState)
        End Function
        
        Private Function OnEndLogStartServiceCall(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndLogStartServiceCall(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnLogStartServiceCallCompleted(ByVal state As Object)
            If (Not (Me.LogStartServiceCallCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent LogStartServiceCallCompleted(Me, New LogStartServiceCallCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub LogStartServiceCallAsync(ByVal startrequest As EventLoggerService.StartServiceCallLogEntry)
            Me.LogStartServiceCallAsync(startrequest, Nothing)
        End Sub
        
        Public Overloads Sub LogStartServiceCallAsync(ByVal startrequest As EventLoggerService.StartServiceCallLogEntry, ByVal userState As Object)
            If (Me.onBeginLogStartServiceCallDelegate Is Nothing) Then
                Me.onBeginLogStartServiceCallDelegate = AddressOf Me.OnBeginLogStartServiceCall
            End If
            If (Me.onEndLogStartServiceCallDelegate Is Nothing) Then
                Me.onEndLogStartServiceCallDelegate = AddressOf Me.OnEndLogStartServiceCall
            End If
            If (Me.onLogStartServiceCallCompletedDelegate Is Nothing) Then
                Me.onLogStartServiceCallCompletedDelegate = AddressOf Me.OnLogStartServiceCallCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginLogStartServiceCallDelegate, New Object() {startrequest}, Me.onEndLogStartServiceCallDelegate, Me.onLogStartServiceCallCompletedDelegate, userState)
        End Sub
        
        Public Function LogEndServiceCall(ByVal endrequest As EventLoggerService.EndServiceCallLogEntry) As String Implements EventLoggerService.IEventLogger.LogEndServiceCall
            Return MyBase.Channel.LogEndServiceCall(endrequest)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginLogEndServiceCall(ByVal endrequest As EventLoggerService.EndServiceCallLogEntry, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements EventLoggerService.IEventLogger.BeginLogEndServiceCall
            Return MyBase.Channel.BeginLogEndServiceCall(endrequest, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndLogEndServiceCall(ByVal result As System.IAsyncResult) As String Implements EventLoggerService.IEventLogger.EndLogEndServiceCall
            Return MyBase.Channel.EndLogEndServiceCall(result)
        End Function
        
        Private Function OnBeginLogEndServiceCall(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim endrequest As EventLoggerService.EndServiceCallLogEntry = CType(inValues(0),EventLoggerService.EndServiceCallLogEntry)
            Return Me.BeginLogEndServiceCall(endrequest, callback, asyncState)
        End Function
        
        Private Function OnEndLogEndServiceCall(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndLogEndServiceCall(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnLogEndServiceCallCompleted(ByVal state As Object)
            If (Not (Me.LogEndServiceCallCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent LogEndServiceCallCompleted(Me, New LogEndServiceCallCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub LogEndServiceCallAsync(ByVal endrequest As EventLoggerService.EndServiceCallLogEntry)
            Me.LogEndServiceCallAsync(endrequest, Nothing)
        End Sub
        
        Public Overloads Sub LogEndServiceCallAsync(ByVal endrequest As EventLoggerService.EndServiceCallLogEntry, ByVal userState As Object)
            If (Me.onBeginLogEndServiceCallDelegate Is Nothing) Then
                Me.onBeginLogEndServiceCallDelegate = AddressOf Me.OnBeginLogEndServiceCall
            End If
            If (Me.onEndLogEndServiceCallDelegate Is Nothing) Then
                Me.onEndLogEndServiceCallDelegate = AddressOf Me.OnEndLogEndServiceCall
            End If
            If (Me.onLogEndServiceCallCompletedDelegate Is Nothing) Then
                Me.onLogEndServiceCallCompletedDelegate = AddressOf Me.OnLogEndServiceCallCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginLogEndServiceCallDelegate, New Object() {endrequest}, Me.onEndLogEndServiceCallDelegate, Me.onLogEndServiceCallCompletedDelegate, userState)
        End Sub
        
        Public Function GetServiceCalls(ByVal appName As String, ByVal pageIndex As Integer, ByVal pageSize As Integer) As System.Collections.Generic.List(Of EventLoggerService.ServiceCallLogEntry) Implements EventLoggerService.IEventLogger.GetServiceCalls
            Return MyBase.Channel.GetServiceCalls(appName, pageIndex, pageSize)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginGetServiceCalls(ByVal appName As String, ByVal pageIndex As Integer, ByVal pageSize As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements EventLoggerService.IEventLogger.BeginGetServiceCalls
            Return MyBase.Channel.BeginGetServiceCalls(appName, pageIndex, pageSize, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndGetServiceCalls(ByVal result As System.IAsyncResult) As System.Collections.Generic.List(Of EventLoggerService.ServiceCallLogEntry) Implements EventLoggerService.IEventLogger.EndGetServiceCalls
            Return MyBase.Channel.EndGetServiceCalls(result)
        End Function
        
        Private Function OnBeginGetServiceCalls(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim appName As String = CType(inValues(0),String)
            Dim pageIndex As Integer = CType(inValues(1),Integer)
            Dim pageSize As Integer = CType(inValues(2),Integer)
            Return Me.BeginGetServiceCalls(appName, pageIndex, pageSize, callback, asyncState)
        End Function
        
        Private Function OnEndGetServiceCalls(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As System.Collections.Generic.List(Of EventLoggerService.ServiceCallLogEntry) = Me.EndGetServiceCalls(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnGetServiceCallsCompleted(ByVal state As Object)
            If (Not (Me.GetServiceCallsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent GetServiceCallsCompleted(Me, New GetServiceCallsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub GetServiceCallsAsync(ByVal appName As String, ByVal pageIndex As Integer, ByVal pageSize As Integer)
            Me.GetServiceCallsAsync(appName, pageIndex, pageSize, Nothing)
        End Sub
        
        Public Overloads Sub GetServiceCallsAsync(ByVal appName As String, ByVal pageIndex As Integer, ByVal pageSize As Integer, ByVal userState As Object)
            If (Me.onBeginGetServiceCallsDelegate Is Nothing) Then
                Me.onBeginGetServiceCallsDelegate = AddressOf Me.OnBeginGetServiceCalls
            End If
            If (Me.onEndGetServiceCallsDelegate Is Nothing) Then
                Me.onEndGetServiceCallsDelegate = AddressOf Me.OnEndGetServiceCalls
            End If
            If (Me.onGetServiceCallsCompletedDelegate Is Nothing) Then
                Me.onGetServiceCallsCompletedDelegate = AddressOf Me.OnGetServiceCallsCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginGetServiceCallsDelegate, New Object() {appName, pageIndex, pageSize}, Me.onEndGetServiceCallsDelegate, Me.onGetServiceCallsCompletedDelegate, userState)
        End Sub
        
        Public Function GetErrors(ByVal criteria As EventLoggerService.LogSearchCriteria) As EventLoggerService.ErrorLogSummary Implements EventLoggerService.IEventLogger.GetErrors
            Return MyBase.Channel.GetErrors(criteria)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginGetErrors(ByVal criteria As EventLoggerService.LogSearchCriteria, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements EventLoggerService.IEventLogger.BeginGetErrors
            Return MyBase.Channel.BeginGetErrors(criteria, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndGetErrors(ByVal result As System.IAsyncResult) As EventLoggerService.ErrorLogSummary Implements EventLoggerService.IEventLogger.EndGetErrors
            Return MyBase.Channel.EndGetErrors(result)
        End Function
        
        Private Function OnBeginGetErrors(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim criteria As EventLoggerService.LogSearchCriteria = CType(inValues(0),EventLoggerService.LogSearchCriteria)
            Return Me.BeginGetErrors(criteria, callback, asyncState)
        End Function
        
        Private Function OnEndGetErrors(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As EventLoggerService.ErrorLogSummary = Me.EndGetErrors(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnGetErrorsCompleted(ByVal state As Object)
            If (Not (Me.GetErrorsCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent GetErrorsCompleted(Me, New GetErrorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub GetErrorsAsync(ByVal criteria As EventLoggerService.LogSearchCriteria)
            Me.GetErrorsAsync(criteria, Nothing)
        End Sub
        
        Public Overloads Sub GetErrorsAsync(ByVal criteria As EventLoggerService.LogSearchCriteria, ByVal userState As Object)
            If (Me.onBeginGetErrorsDelegate Is Nothing) Then
                Me.onBeginGetErrorsDelegate = AddressOf Me.OnBeginGetErrors
            End If
            If (Me.onEndGetErrorsDelegate Is Nothing) Then
                Me.onEndGetErrorsDelegate = AddressOf Me.OnEndGetErrors
            End If
            If (Me.onGetErrorsCompletedDelegate Is Nothing) Then
                Me.onGetErrorsCompletedDelegate = AddressOf Me.OnGetErrorsCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginGetErrorsDelegate, New Object() {criteria}, Me.onEndGetErrorsDelegate, Me.onGetErrorsCompletedDelegate, userState)
        End Sub
        
        Public Function GetError(ByVal appName As String, ByVal id As String) As String Implements EventLoggerService.IEventLogger.GetError
            Return MyBase.Channel.GetError(appName, id)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginGetError(ByVal appName As String, ByVal id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements EventLoggerService.IEventLogger.BeginGetError
            Return MyBase.Channel.BeginGetError(appName, id, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndGetError(ByVal result As System.IAsyncResult) As String Implements EventLoggerService.IEventLogger.EndGetError
            Return MyBase.Channel.EndGetError(result)
        End Function
        
        Private Function OnBeginGetError(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim appName As String = CType(inValues(0),String)
            Dim id As String = CType(inValues(1),String)
            Return Me.BeginGetError(appName, id, callback, asyncState)
        End Function
        
        Private Function OnEndGetError(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndGetError(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnGetErrorCompleted(ByVal state As Object)
            If (Not (Me.GetErrorCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent GetErrorCompleted(Me, New GetErrorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub GetErrorAsync(ByVal appName As String, ByVal id As String)
            Me.GetErrorAsync(appName, id, Nothing)
        End Sub
        
        Public Overloads Sub GetErrorAsync(ByVal appName As String, ByVal id As String, ByVal userState As Object)
            If (Me.onBeginGetErrorDelegate Is Nothing) Then
                Me.onBeginGetErrorDelegate = AddressOf Me.OnBeginGetError
            End If
            If (Me.onEndGetErrorDelegate Is Nothing) Then
                Me.onEndGetErrorDelegate = AddressOf Me.OnEndGetError
            End If
            If (Me.onGetErrorCompletedDelegate Is Nothing) Then
                Me.onGetErrorCompletedDelegate = AddressOf Me.OnGetErrorCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginGetErrorDelegate, New Object() {appName, id}, Me.onEndGetErrorDelegate, Me.onGetErrorCompletedDelegate, userState)
        End Sub
    End Class
End Namespace
